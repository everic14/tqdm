name: Post Release
on:
  release:
    types: [published]
jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Checkout wiki
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository }}.wiki
        path: wiki
    - name: Checkout docs
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository }}.github.io
        path: docs
        ref: src
        token: ${{ secrets.GH_TOKEN }}
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install
      run: |
        pip install -U wheel
        pip install -U -r ./docs/requirements.txt
        git config --global user.email "$GIT_AUTHOR_EMAIL"
        git config --global user.name "$GIT_AUTHOR_NAME"
      env:
        GIT_AUTHOR_NAME: ${{ github.event.sender.login }}
        GIT_AUTHOR_EMAIL: ${{ github.event.sender.login }}@users.noreply.github.com
    - name: Update Wiki Releases
      run: |
        pushd wiki
        make
        git commit -a -m "update release notes to ${GITHUB_REF#refs/tags/}"
        git push
        popd
    - name: Update Docs
      run: |
        pushd docs
        git fetch --depth=1 origin master:master
        git checkout master
        git push --set-upstream origin master
        git checkout -
        make deploy
        popd
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: build and publish
      env:
        TWINE_REPOSITORY: pypi
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*
